// Code generated by MockGen. DO NOT EDIT.
// Source: listener/engineproxy.go

// Package mock_engine is a generated GoMock package.
package mock_engine

import (
	context "context"
	reflect "reflect"

	provider "github.com/filecoin-project/index-provider"
	metadata "github.com/filecoin-project/index-provider/metadata"
	gomock "github.com/golang/mock/gomock"
	cid "github.com/ipfs/go-cid"
)

// MockEngineProxy is a mock of EngineProxy interface.
type MockEngineProxy struct {
	ctrl     *gomock.Controller
	recorder *MockEngineProxyMockRecorder
}

// MockEngineProxyMockRecorder is the mock recorder for MockEngineProxy.
type MockEngineProxyMockRecorder struct {
	mock *MockEngineProxy
}

// NewMockEngineProxy creates a new mock instance.
func NewMockEngineProxy(ctrl *gomock.Controller) *MockEngineProxy {
	mock := &MockEngineProxy{ctrl: ctrl}
	mock.recorder = &MockEngineProxyMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEngineProxy) EXPECT() *MockEngineProxyMockRecorder {
	return m.recorder
}

// NotifyPut mocks base method.
func (m *MockEngineProxy) NotifyPut(ctx context.Context, contextID []byte, md metadata.Metadata) (cid.Cid, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NotifyPut", ctx, contextID, md)
	ret0, _ := ret[0].(cid.Cid)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NotifyPut indicates an expected call of NotifyPut.
func (mr *MockEngineProxyMockRecorder) NotifyPut(ctx, contextID, md interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NotifyPut", reflect.TypeOf((*MockEngineProxy)(nil).NotifyPut), ctx, contextID, md)
}

// NotifyRemove mocks base method.
func (m *MockEngineProxy) NotifyRemove(ctx context.Context, contextID []byte) (cid.Cid, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NotifyRemove", ctx, contextID)
	ret0, _ := ret[0].(cid.Cid)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NotifyRemove indicates an expected call of NotifyRemove.
func (mr *MockEngineProxyMockRecorder) NotifyRemove(ctx, contextID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NotifyRemove", reflect.TypeOf((*MockEngineProxy)(nil).NotifyRemove), ctx, contextID)
}

// RegisterMultihashLister mocks base method.
func (m *MockEngineProxy) RegisterMultihashLister(l provider.MultihashLister) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "RegisterMultihashLister", l)
}

// RegisterMultihashLister indicates an expected call of RegisterMultihashLister.
func (mr *MockEngineProxyMockRecorder) RegisterMultihashLister(l interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RegisterMultihashLister", reflect.TypeOf((*MockEngineProxy)(nil).RegisterMultihashLister), l)
}
